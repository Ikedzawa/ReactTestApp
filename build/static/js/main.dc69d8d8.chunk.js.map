{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","index","markTodo","removeTodo","className","text","class","isDone","Button","variant","disabled","Color","undefined","onClick","FormTodo","addTodo","React","useState","value","setValue","Form","onSubmit","e","preventDefault","Group","Label","Control","type","onChange","target","placeholder","App","todos","setTodos","newTodos","splice","map","Card","Body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAMA,SAASA,EAAT,GAAsD,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACrC,OACE,sBAAKC,UAAU,OAAf,UACE,+BACGJ,EAAKK,OAER,qBAAKC,MAAM,OAAX,SACIN,EAAKO,OAAS,0DAAe,KAEjC,sBAAKD,MAAM,WAAX,UACE,cAACE,EAAA,EAAD,CAAQC,QAAQ,kBACRC,SAAUV,EAAKO,OACfI,MAAOX,EAAKO,OAAS,aAAUK,EAC/BC,QAAS,kBAAMX,EAASD,IAHhC,oEAMA,cAACO,EAAA,EAAD,CAAQC,QAAQ,iBACRI,QAAS,kBAAMV,EAAWF,IADlC,8DASR,SAASa,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QAClB,EAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KASA,OACE,eAACC,EAAA,EAAD,CAAMC,SARa,SAAAC,GACnBA,EAAEC,iBACGL,IACLH,EAAQG,GACRC,EAAS,MAIT,UACA,eAACC,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,UACE,4KAEF,cAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,OACLvB,UAAU,QACVc,MAAOA,EACPU,SAAU,SAAAN,GAAC,OAAIH,EAASG,EAAEO,OAAOX,QACjCY,YAAY,iFAE5B,cAACtB,EAAA,EAAD,CAAQJ,UAAU,SAASuB,KAAK,SAAhC,iEAyDWI,MAlDf,WACE,MAA0Bf,IAAMC,SAAS,CACvC,CACEZ,KAAM,iJACNE,QAAQ,KAHZ,mBAAOyB,EAAP,KAAcC,EAAd,KAYM/B,EAAW,SAAAD,GACf,IAAMiC,EAAQ,YAAOF,GACrBE,EAASjC,GAAOM,QAAS,EACzB0B,EAASC,IAGL/B,EAAa,SAAAF,GACjB,IAAMiC,EAAQ,YAAOF,GACrBE,EAASC,OAAOlC,EAAO,GACvBgC,EAASC,IAGX,OACE,qBAAK9B,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,cAAd,qEAGA,cAACU,EAAD,CAAUC,QAvBA,SAAAV,GACd,IAAM6B,EAAQ,sBAAOF,GAAP,CAAc,CAAE3B,UAC9B4B,EAASC,MAsBL,8BACGF,EAAMI,KAAI,SAACpC,EAAMC,GAAP,OACT,cAACoC,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,cAACvC,EAAD,CACME,MAAOA,EACPD,KAAMA,EACNE,SAAUA,EACVC,WAAYA,GAJPF,kBCpFZsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dc69d8d8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { Button, Card, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction Todo({ todo, index, markTodo, removeTodo }) {\n  return (\n    <div className=\"todo\">\n      <span>\n        {todo.text}\n      </span>\n      <div class=\"done\">\n        { todo.isDone ? 'Завершено!' : '' }\n      </div>\n      <div class=\"controls\">\n        <Button variant=\"outline-success\"\n                disabled={todo.isDone}\n                Color={todo.isDone ? 'muted' : undefined}\n                onClick={() => markTodo(index)}>\n          Завершить\n        </Button>\n        <Button variant=\"outline-danger\"\n                onClick={() => removeTodo(index)}>\n          Удалить\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nfunction FormTodo({ addTodo }) {\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}> \n    <Form.Group>\n      <Form.Label>\n        <h3>Мое новое интересное дело:</h3>\n      </Form.Label>\n      <Form.Control type=\"text\"\n                    className=\"input\"\n                    value={value}\n                    onChange={e => setValue(e.target.value)}\n                    placeholder=\"Название дела\"/>\n    </Form.Group>\n    <Button className=\"button\" type=\"submit\">\n      Добавить\n    </Button>\n  </Form>\n  );\n}\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    {\n      text: \"Первое дело (инициализация)\",\n      isDone: true\n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const markTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isDone = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"data\">\n      <div className=\"container\">\n        <h1 className=\"text-center\">\n          Список дел\n        </h1>\n        <FormTodo addTodo={addTodo} />\n        <div>\n          {todos.map((todo, index) => (\n            <Card>\n              <Card.Body>\n                <Todo key={index}\n                      index={index}\n                      todo={todo}\n                      markTodo={markTodo}\n                      removeTodo={removeTodo}/>\n              </Card.Body>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}